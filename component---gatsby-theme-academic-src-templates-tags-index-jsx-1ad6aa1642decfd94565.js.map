{"version":3,"file":"component---gatsby-theme-academic-src-templates-tags-index-jsx-1ad6aa1642decfd94565.js","mappings":"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","sources":["webpack://example/../node_modules/antd/es/_util/colors.js","webpack://example/../node_modules/antd/es/_util/raf.js","webpack://example/../gatsby-theme-academic/src/components/PostCard/index.jsx","webpack://example/../gatsby-theme-academic/src/components/PostCard/postCard.module.less","webpack://example/../gatsby-theme-academic/src/templates/tags/index.jsx","webpack://example/../node_modules/lodash/_baseFilter.js","webpack://example/../node_modules/lodash/filter.js"],"sourcesContent":["import { tuple } from './type';\nexport var PresetStatusColorTypes = tuple('success', 'processing', 'error', 'default', 'warning'); // eslint-disable-next-line import/prefer-default-export\n\nexport var PresetColorTypes = tuple('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime');","import raf from \"rc-util/es/raf\";\nvar id = 0;\nvar ids = {}; // Support call raf with delay specified frame\n\nexport default function wrapperRaf(callback) {\n  var delayFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var myId = id++;\n  var restFrames = delayFrames;\n\n  function internalCallback() {\n    restFrames -= 1;\n\n    if (restFrames <= 0) {\n      callback();\n      delete ids[myId];\n    } else {\n      ids[myId] = raf(internalCallback);\n    }\n  }\n\n  ids[myId] = raf(internalCallback);\n  return myId;\n}\n\nwrapperRaf.cancel = function cancel(pid) {\n  if (pid === undefined) return;\n  raf.cancel(ids[pid]);\n  delete ids[pid];\n};\n\nwrapperRaf.ids = ids; // export this for test usage","import { Row, Card } from 'antd';\nimport classnames from 'classnames';\nimport Img from 'gatsby-image';\nimport React from 'react';\n\nimport { useSiteMetadata } from '../../utils/hooks';\nimport Utils from '../../utils/pageUtils';\nimport PostTag from '../PostTag';\n\nimport * as style from './postCard.module.less';\n\nconst PostCard = (props) => {\n  const {\n    data: { node },\n    tagsMap,\n  } = props;\n  const {\n    frontmatter: {\n      title,\n      excerpt,\n      path,\n      date,\n      tags,\n      cover,\n    },\n  } = node;\n  const fluid = cover ? cover.childImageSharp.fluid : null;\n  const siteMetadata = useSiteMetadata();\n  const url = Utils.resolvePageUrl(path);\n  // const handleClick = (e) => {\n  //   if (e.target.tagName.toLowerCase() !== 'a' && url) {\n  //     window.location.href = Utils.generateFullUrl(siteMetadata, url);\n  //     // navigate(url);\n  //   }\n  // };\n\n  const excerptHTML = Utils.parseMarkDown(Utils.trimExcerpt(excerpt), true);\n\n  return (\n    <Card\n      className={classnames(style.postCard, 'cursor-default')}\n      bodyStyle={{ padding: '0.8rem' }}\n      hoverable\n      cover={(\n        <div>\n          <a href={Utils.generateFullUrl(siteMetadata, url)}>\n            {fluid ? <Img fluid={fluid} /> : <div className={style.postCardImg} />}\n          </a>\n          <span className={style.dateHolder}>\n            {date ? Utils.formatDate(date) : ''}\n          </span>\n        </div>\n      )}\n      // onClick={handleClick}\n    >\n      <Card.Meta\n        title={(\n          <span className={style.title}>\n            <a href={Utils.generateFullUrl(siteMetadata, url)}>{title}</a>\n          </span>\n        )}\n        style={{ marginBottom: '1rem' }}\n      />\n      <Row align=\"middle\" gutter={[0, 8]}>\n        {tags ?\n          tags.map((tag) => (tagsMap[tag] ? <PostTag key={tag} tag={tagsMap[tag]} /> : null)) :\n          null}\n      </Row>\n      <a href={Utils.generateFullUrl(siteMetadata, url)}>\n        <p style={{ marginTop: '1rem' }} dangerouslySetInnerHTML={{ __html: excerptHTML }} />\n      </a>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nexport var postCard = \"postCard-module--postCard--2daM1\";\nexport var postCardImg = \"postCard-module--postCardImg--3L6nd\";\nexport var dateHolder = \"postCard-module--dateHolder--xmc-b\";\nexport var title = \"postCard-module--title--2FDrU\";","/* eslint-disable react/forbid-prop-types */\n/* Vendor imports */\nimport {\n  Layout, Row, Col,\n} from 'antd';\nimport { graphql } from 'gatsby';\n// import Img from 'gatsby-image';\n/* App imports */\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport PostCard from '../../components/PostCard';\n// import Statistics from '../../../content/statistics.json';\nimport ProjectCard from '../../components/ProjectCard';\nimport SEO from '../../components/Seo';\nimport Utils from '../../utils/pageUtils';\n\nimport * as style from './tags.module.less';\n\nconst TagPage = ({\n  data,\n  pageContext,\n}) => {\n  const tagName = pageContext.tag;\n  // const { tag } = pageContext;\n  // const tagName = Statistics.tags[tag].name || tag;\n  // const tagPagePath = siteMetadata.pages.tags;\n  // const tagImage = data.allFile.edges.find((edge) => edge.node.name === tag).node\n  //   .childImageSharp.fluid;\n  const docs = data.allMdx.edges;\n  const posts = _.filter(docs, (doc) => doc.node.fields.slug.type === 'posts');\n  const project = _.filter(docs, (doc) => doc.node.fields.slug.type === 'project');\n  const tags = data.allTag ? data.allTag.edges : [];\n  const tagsMap = _.mapValues(_.keyBy(tags, (tag) => tag.node.name), 'node');\n\n  const tag = tagsMap[tagName];\n  const tagPagePath = tag ? tag.path : '#';\n  const tagDescription = tag ? tag.description : '';\n\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO\n          title={tagName}\n          description={`All post about ${tagName}. ${tagDescription} `}\n          path={Utils.resolvePageUrl(tagPagePath, tag)}\n          keywords={[tagName]}\n        />\n        <SidebarWrapper>\n          <div className={`marginTopTitle ${style.tagsList}`}>\n            <h1 className=\"titleSeparate\">\n              #\n              {tagName}\n            </h1>\n            {/* <div className={style.bannerImgContainer}> */}\n            {/*  <Img className={style.bannerImg} fluid={tagImage} alt={tagName} /> */}\n            {/* </div> */}\n            <h4 className=\"textCenter\">\n              {tagDescription}\n            </h4>\n          </div>\n          {project.length > 0 ? (\n            <>\n              <h2>Project</h2>\n              <Row gutter={[20, 20]}>\n                {project.map((post, key) => (\n                // eslint-disable-next-line react/no-array-index-key\n                  <Col key={key} xs={24} sm={24} md={24} lg={24}>\n                    <ProjectCard data={post} tagsMap={tagsMap} />\n                  </Col>\n                ))}\n              </Row>\n              ,\n            </>\n          ) : null}\n          {posts.length > 0 ? (\n            <>\n              <h2>Posts</h2>\n              <Row gutter={[20, 20]}>\n                {posts.map((post, key) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                    <PostCard data={post} tagsMap={tagsMap} />\n                  </Col>\n                ))}\n              </Row>\n              ,\n            </>\n          ) : null}\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nTagPage.propTypes = {\n  data: PropTypes.shape({\n    allTag: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            color: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            description: PropTypes.string,\n            path: PropTypes.string,\n          }),\n        }),\n      ).isRequired,\n    }).isRequired,\n    allMdx: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object).isRequired,\n    }).isRequired,\n    allFile: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }),\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allTag {\n      edges {\n        node {\n          color\n          name\n          description\n          path\n        }\n      }\n    }\n    allMdx(\n      filter: {\n        fields: { slug: { tags: { in: [$tag] } } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 320, maxHeight: 180, fit: CONTAIN, background: \"rgba(0,0,0,0)\") {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n            date\n            venue\n            authors\n            path\n            title\n            tags\n            excerpt\n          }\n          fields {\n            slug {\n              links {\n                name\n                url\n              }\n              type\n            }\n          }\n        }\n      }\n    }\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxHeight: 600) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagPage;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["PresetStatusColorTypes","PresetColorTypes","id","ids","wrapperRaf","callback","delayFrames","arguments","length","undefined","myId","restFrames","internalCallback","cancel","pid","props","node","data","tagsMap","frontmatter","title","excerpt","path","date","tags","cover","fluid","childImageSharp","siteMetadata","useSiteMetadata","url","Utils","excerptHTML","className","classnames","bodyStyle","padding","hoverable","href","style","marginBottom","align","gutter","map","tag","PostTag","key","marginTop","dangerouslySetInnerHTML","__html","tagName","pageContext","docs","allMdx","edges","posts","doc","fields","slug","type","project","allTag","name","tagPagePath","tagDescription","description","Header","keywords","Sidebar","post","xs","sm","md","lg","ProjectCard","PostCard","baseEach","module","exports","collection","predicate","result","value","index","push","arrayFilter","baseFilter","baseIteratee","isArray"],"sourceRoot":""}